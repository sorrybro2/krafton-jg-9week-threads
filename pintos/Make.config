# -*- makefile -*-

SHELL = /bin/sh

VPATH = $(SRCDIR)

# Toolchain
# Allow cross-compilers via CROSS_COMPILE (e.g., x86_64-linux-gnu- or x86_64-elf-).
# Defaults to native tools when CROSS_COMPILE is empty.
CC ?= $(CROSS_COMPILE)gcc
OBJCOPY ?= $(CROSS_COMPILE)objcopy

# Prefer GNU BFD linker for Pintos (64-bit relocations, custom linker script).
# If a CROSS_COMPILE-prefixed ld.bfd exists, use it; otherwise, fall back.
LD ?= $(CROSS_COMPILE)ld
ifneq ($(strip $(shell command -v $(CROSS_COMPILE)ld.bfd 2> /dev/null)),)
LD := $(CROSS_COMPILE)ld.bfd
else ifneq ($(strip $(shell command -v ld.bfd 2> /dev/null)),)
LD := ld.bfd
endif

# Optional: warn when using LLVM LLD, which may cause relocation/linker script issues.
ifneq ($(strip $(shell $(LD) -v 2>&1 | egrep -i '(^LLD|LLVM)')),)
$(warning *** Detected non-BFD linker ($(LD)). Pintos prefers GNU BFD (ld.bfd). ***)
endif

ifeq ($(strip $(shell command -v $(CC) 2> /dev/null)),)
$(warning *** Compiler ($(CC)) not found.  Did you set $$PATH properly?  Please refer to the Getting Started section in the documentation for details. ***)
endif

# Compiler and assembler invocation.
DEFINES =
WARNINGS = -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers
CFLAGS = -g -msoft-float -O0 -fno-omit-frame-pointer -mno-red-zone
CFLAGS += -mcmodel=large -fno-plt -fno-pic -mno-sse
CPPFLAGS = -nostdinc -I$(SRCDIR) -I$(SRCDIR)/include/lib -I$(SRCDIR)/include
CPPFLAGS += -I$(SRCDIR)/include/lib/kernel
ASFLAGS = -Wa,--gstabs -mcmodel=large
LDFLAGS = --no-relax
DEPS = -MMD -MF $(@:.o=.d)

# Turn off -fstack-protector, which we don't support.
ifeq ($(strip $(shell echo | $(CC) -fno-stack-protector -E - > /dev/null 2>&1; echo $$?)),0)
CFLAGS += -fno-stack-protector
endif

# Also turn off stack clash protection.
ifeq ($(strip $(shell echo | $(CC) -fno-stack-clash-protection -E - > /dev/null 2>&1; echo $$?)),0)
CFLAGS += -fno-stack-clash-protection
endif

%.o: %.c
	$(CC) -c $< -o $@ $(CFLAGS) $(CPPFLAGS) $(WARNINGS) $(DEFINES) $(DEPS)

%.o: %.S
	$(CC) -c $< -o $@ $(ASFLAGS) $(CPPFLAGS) $(DEFINES) $(DEPS)
